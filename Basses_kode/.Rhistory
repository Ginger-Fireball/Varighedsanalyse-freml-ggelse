<<<<<<< HEAD
=======
categorical_vars <- c("status", "dead", "ici", "epicell", "ulceration", "sex", "invas2")
lapply(df_melanoma30[categorical_vars], table)
# Bar plots for categorical variables
for (var in categorical_vars) {
pdf(paste("Billeder_duration/Bar_plot_of_",var,".pdf"))
ggplot(df_melanoma30, aes_string(x = var)) +
geom_bar(fill = "lightblue", color = "black") +
ggtitle(paste("Bar plot of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) -> plot
print(plot)
dev.off()
}
# Create thickness categories
df_melanoma30$thickness_cat <- as.factor(cut(df_melanoma30$thickness,
breaks = quantile(df_melanoma30$thickness, probs = c(0, 1/5, 2/5, 3/5, 4/5, 1), na.rm = TRUE),
labels = c("Cat 1", "Cat 2", "Cat 3", "Cat 4", "Cat 5")))
# Create a survival object
df_melanoma30$dead <- as.numeric(df_melanoma30$dead)
survival_object <- Surv(df_melanoma30$time, df_melanoma30$dead)
# Fit Kaplan-Meier curves for thickness categories
fit <- survfit(survival_object ~ thickness_cat, data = df_melanoma30)
# Plot Kaplan-Meier survival curves
pdf("Billeder_duration/Kaplan-Meier_Survival_Curves_by_Tumor_Thickness_Categories.pdf")
ggsurvplot(fit, data = df_melanoma30,
pval = TRUE, # Adds p-value from log-rank test
conf.int = TRUE, # Adds confidence intervals
risk.table = TRUE, # Shows risk table
ggtheme = theme_minimal(),
palette = "Dark2",
title = "Kaplan-Meier Survival Curves by Tumor Thickness Categories")
dev.off()
# Perform the log-rank test
log_rank_test <- survdiff(survival_object ~ thickness_cat, data = df_melanoma30)
log_rank_test
# Fit the Cox proportional hazards model
cox_model <- coxph(Surv(time, dead) ~ age + thickness + epicell + ici + ulceration + sex + invas2, data = df_melanoma30)
summary(cox_model)
# Calculate and add martingale residuals to the dataset
martingale_residuals <- residuals(cox_model, type = "martingale")
df_melanoma30$martingale_residuals <- martingale_residuals
# Plot martingale residuals against 'age'
pdf("Billeder_duration/Martingale_Residuals_vs_Age.pdf")
ggplot(df_melanoma30, aes(x = age, y = martingale_residuals)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", color = "blue") +
ggtitle("Martingale Residuals vs Age") +
xlab("Age") +
ylab("Martingale Residuals")
dev.off()
# Plot martingale residuals against 'thickness'
pdf("Billeder_duration/Martingale_Residuals_vs_Tumor_Thickness.pdf")
ggplot(df_melanoma30, aes(x = thickness, y = martingale_residuals)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", color = "blue") +
ggtitle("Martingale Residuals vs Tumor Thickness") +
xlab("Tumor Thickness") +
ylab("Martingale Residuals")
dev.off()
# Fit models with log-transformed age and thickness
cox_model_log <- coxph(Surv(time, dead) ~ log(age) + log(thickness) + epicell + ici + ulceration + sex + invas2, data = df_melanoma30)
summary(cox_model_log)
# Compare AIC of original model vs log-transformed model
AIC(cox_model, cox_model_log)
# Opgave 5: Additional Steps (To be defined as needed)
# Opgave 5: Additional Steps (To be defined as needed)
# You can continue with model assessment, diagnostics, or any additional tasks for opgave 5
# Opgave 5: Additional Steps (To be defined as needed)
# You can continue with model assessment, diagnostics, or any additional tasks for opgave 5
ggplot(df_melanoma30, aes(x = thickness, y = martingale_residuals)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", color = "blue") +
ggtitle("Martingale Residuals vs Tumor Thickness") +
xlab("Tumor Thickness") +
ylab("Martingale Residuals")
View(cox_model)
source("~/GitHub/Varighedsanalyse-freml-ggelse/Basses_kode/Mini_project_varighedsanalyse.R", echo=TRUE)
# Load required libraries
library(ggplot2)
library(survival)
library(KMsurv)
library(survminer)
library(moments)
#stor tissemand
>>>>>>> 217864b3594e2929f5391c0dd009bea67c33b355
# Load the data
load("melanoma30.RData")
df_melanoma30 <- melanoma30
# View the first few rows and structure of the dataset
head(df_melanoma30)
str(df_melanoma30)
summary(df_melanoma30)
# Boxplots for continuous variables
continuous_vars <- c("time", "thickness", "age", "logthick")
for (var in continuous_vars) {
pdf(paste("Billeder_duration/Boxplot_of_",var,".pdf"))
ggplot(df_melanoma30, aes_string(x = var)) +
geom_boxplot() +
ggtitle(paste("Boxplot of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) +
ylab("Values") -> plot
print(plot)
dev.off()
}
# Histogram and density plot for continuous variables
for (var in continuous_vars) {
pdf(paste("Billeder_duration/Histogram_and_Density_of_",var,".pdf"))
ggplot(df_melanoma30, aes_string(x = var)) +
geom_histogram(bins = 30, fill = "lightblue", color = "black", alpha = 0.7) +
geom_density(aes(y = ..density.. * max(..count..)), color = "red") +
ggtitle(paste("Histogram and Density of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) -> plot
print(plot)
dev.off()
}
# Calculate skewness for continuous variables
sapply(df_melanoma30[continuous_vars], skewness, na.rm = TRUE)
# Table of frequencies for categorical variables
categorical_vars <- c("status", "dead", "ici", "epicell", "ulceration", "sex", "invas2")
lapply(df_melanoma30[categorical_vars], table)
# Bar plots for categorical variables
for (var in categorical_vars) {
pdf(paste("Billeder_duration/Bar_plot_of_",var,".pdf"))
ggplot(df_melanoma30, aes_string(x = var)) +
geom_bar(fill = "lightblue", color = "black") +
ggtitle(paste("Bar plot of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) -> plot
print(plot)
dev.off()
}
# Create thickness categories
df_melanoma30$thickness_cat <- as.factor(cut(df_melanoma30$thickness,
breaks = quantile(df_melanoma30$thickness, probs = c(0, 1/5, 2/5, 3/5, 4/5, 1), na.rm = TRUE),
labels = c("Cat 1", "Cat 2", "Cat 3", "Cat 4", "Cat 5")))
# Create a survival object
df_melanoma30$dead <- as.numeric(df_melanoma30$dead)
survival_object <- Surv(df_melanoma30$time, df_melanoma30$dead)
# Fit Kaplan-Meier curves for thickness categories
fit <- survfit(survival_object ~ thickness_cat, data = df_melanoma30)
# Plot Kaplan-Meier survival curves
pdf("Billeder_duration/Kaplan-Meier_Survival_Curves_by_Tumor_Thickness_Categories.pdf")
ggsurvplot(fit, data = df_melanoma30,
pval = TRUE, # Adds p-value from log-rank test
conf.int = TRUE, # Adds confidence intervals
risk.table = TRUE, # Shows risk table
ggtheme = theme_minimal(),
palette = "Dark2",
title = "Kaplan-Meier Survival Curves by Tumor Thickness Categories")
dev.off()
# Perform the log-rank test
log_rank_test <- survdiff(survival_object ~ thickness_cat, data = df_melanoma30)
log_rank_test
# Fit the Cox proportional hazards model
cox_model <- coxph(Surv(time, dead) ~ age + thickness + epicell + ici + ulceration + sex + invas2, data = df_melanoma30)
summary(cox_model)
# Calculate and add martingale residuals to the dataset
martingale_residuals <- residuals(cox_model, type = "martingale")
df_melanoma30$martingale_residuals <- martingale_residuals
# Plot martingale residuals against 'age'
pdf("Billeder_duration/Martingale_Residuals_vs_Age.pdf")
ggplot(df_melanoma30, aes(x = age, y = martingale_residuals)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", color = "blue") +
ggtitle("Martingale Residuals vs Age") +
xlab("Age") +
ylab("Martingale Residuals")
dev.off()
# Plot martingale residuals against 'thickness'
pdf("Billeder_duration/Martingale_Residuals_vs_Tumor_Thickness.pdf")
ggplot(df_melanoma30, aes(x = thickness, y = martingale_residuals)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", color = "blue") +
ggtitle("Martingale Residuals vs Tumor Thickness") +
xlab("Tumor Thickness") +
ylab("Martingale Residuals")
dev.off()
# Fit models with log-transformed age and thickness
cox_model_log <- coxph(Surv(time, dead) ~ log(age) + log(thickness) + epicell + ici + ulceration + sex + invas2, data = df_melanoma30)
summary(cox_model_log)
# Compare AIC of original model vs log-transformed model
AIC(cox_model, cox_model_log)
# Opgave 5: Additional Steps (To be defined as needed)
# Opgave 5: Additional Steps (To be defined as needed)
# You can continue with model assessment, diagnostics, or any additional tasks for opgave 5
# Histogram and density plot for continuous variables
for (var in continuous_vars) {
pdf(paste("Billeder_duration/Histogram_and_Density_of_",var,".pdf"))
ggplot(df_melanoma30, aes_string(x = var)) +
#  geom_histogram(bins = 30, fill = "lightblue", color = "black", alpha = 0.7) +
geom_density(aes(y = ..density.. * max(..count..)), color = "red") +
ggtitle(paste("Histogram and Density of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) -> plot
print(plot)
dev.off()
}
View(df_melanoma30)
# Fit models with log-transformed age and thickness
cox_model_log <- coxph(Surv(time, dead) ~ log(age) + logthick + epicell + ici + ulceration + sex + invas2, data = df_melanoma30)
summary(cox_model_log)
# Load required libraries
library(ggplot2)
library(survival)
library(KMsurv)
library(survminer)
library(moments)
#stor tissemand
# Load the data
load("melanoma30.RData")
df_melanoma30 <- melanoma30
# View the first few rows and structure of the dataset
head(df_melanoma30)
str(df_melanoma30)
summary(df_melanoma30)
# Boxplots for continuous variables
continuous_vars <- c("time", "thickness", "age", "logthick")
for (var in continuous_vars) {
pdf(paste("Billeder_duration/Boxplot_of_",var,".pdf"))
ggplot(df_melanoma30, aes_string(x = var)) +
geom_boxplot() +
ggtitle(paste("Boxplot of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) +
ylab("Values") -> plot
print(plot)
dev.off()
}
for (var in continuous_vars) {
pdf(paste("Billeder_duration/Boxplot_of_",var,".pdf"))
ggplot(df_melanoma30, aes_string(x = var)) +
geom_boxplot() +
ggtitle(paste("Boxplot of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) +
ylab("Values") -> plot
print(plot)
dev.off()
}
for (var in continuous_vars) {
pdf(paste("Billeder_duration/Boxplot_of_",var,".pdf"))
ggplot(df_melanoma30, aes_string(x = var)) +
geom_boxplot() +
ggtitle(paste("Boxplot of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) +
ylab("Values") -> plot
print(plot)
#  dev.off()
}
for (var in continuous_vars) {
# pdf(paste("Billeder_duration/Boxplot_of_",var,".pdf"))
ggplot(df_melanoma30, aes_string(x = var)) +
geom_boxplot() +
ggtitle(paste("Boxplot of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) +
ylab("Values") -> plot
print(plot)
#  dev.off()
}
# Boxplots for continuous variables
continuous_vars <- c("time", "thickness", "age", "logthick")
for (var in continuous_vars) {
# pdf(paste("Billeder_duration/Boxplot_of_",var,".pdf"))
ggplot(df_melanoma30, aes_string(x = var)) +
geom_boxplot() +
ggtitle(paste("Boxplot of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) +
ylab("Values") -> plot
print(plot)
#  dev.off()
}
for (var in continuous_vars) {
#  pdf(paste("Billeder_duration/Boxplot_of_",var,".pdf"))
ggplot(df_melanoma30, aes_string(x = var)) +
geom_boxplot() +
ggtitle(paste("Boxplot of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) +
ylab("Values") -> plot
print(plot)
#dev.off()
}
#  pdf(paste("Billeder_duration/Boxplot_of_",var,".pdf"))
ggplot(df_melanoma30, aes_string(x = var)) +
geom_boxplot() +
ggtitle(paste("Boxplot of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) +
ylab("Values") -> plot
print(plot)
# Boxplots for continuous variables
continuous_vars <- c("time", "thickness", "age", "logthick")
for (var in continuous_vars) {
pdf(paste("Billeder_duration/Boxplot_of_",var,".pdf"))
ggplot(df_melanoma30, aes_string(x = var)) +
geom_boxplot() +
ggtitle(paste("Boxplot of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) +
ylab("Values") -> plot
print(plot)
dev.off()
}
# Calculate skewness for continuous variables
sapply(df_melanoma30[continuous_vars], skewness, na.rm = TRUE)
# Table of frequencies for categorical variables
categorical_vars <- c("status", "dead", "ici", "epicell", "ulceration", "sex", "invas2")
lapply(df_melanoma30[categorical_vars], table)
# Create thickness categories
df_melanoma30$thickness_cat <- as.factor(cut(df_melanoma30$thickness,
breaks = quantile(df_melanoma30$thickness, probs = c(0, 1/5, 2/5, 3/5, 4/5, 1), na.rm = TRUE),
labels = c("Cat 1", "Cat 2", "Cat 3", "Cat 4", "Cat 5")))
# Create a survival object
df_melanoma30$dead <- as.numeric(df_melanoma30$dead)
survival_object <- Surv(df_melanoma30$time, df_melanoma30$dead)
# Create thickness categories
df_melanoma30$thickness_cat <- as.factor(cut(df_melanoma30$thickness,
breaks = quantile(df_melanoma30$thickness, probs = c(0, 1/5, 2/5, 3/5, 4/5, 1), na.rm = TRUE),
labels = c("Cat 1", "Cat 2", "Cat 3", "Cat 4", "Cat 5")))
# Create a survival object
df_melanoma30$dead <- as.numeric(df_melanoma30$dead)
survival_object <- Surv(df_melanoma30$time, df_melanoma30$dead)
# Fit Kaplan-Meier curves for thickness categories
fit <- survfit(survival_object ~ thickness_cat, data = df_melanoma30)
# Plot Kaplan-Meier survival curves
pdf("Billeder_duration/Kaplan-Meier_Survival_Curves_by_Tumor_Thickness_Categories.pdf")
# Plot Kaplan-Meier survival curves
pdf("Billeder_duration/Kaplan-Meier_Survival_Curves_by_Tumor_Thickness_Categories.pdf")
ggsurvplot(fit, data = df_melanoma30,
pval = TRUE, # Adds p-value from log-rank test
conf.int = TRUE, # Adds confidence intervals
risk.table = TRUE, # Shows risk table
ggtheme = theme_minimal(),
palette = "Dark2",
title = "Kaplan-Meier Survival Curves by Tumor Thickness Categories")
dev.off()
# Plot Kaplan-Meier survival curves
pdf("Billeder_duration/Kaplan-Meier_Survival_Curves_by_Tumor_Thickness_Categories.pdf")
ggsurvplot(fit, data = df_melanoma30,
pval = TRUE, # Adds p-value from log-rank test
conf.int = FALSE, # Adds confidence intervals
risk.table = TRUE, # Shows risk table
ggtheme = theme_minimal(),
palette = "Dark2",
title = "Kaplan-Meier Survival Curves by Tumor Thickness Categories")
dev.off()
# Perform the log-rank test
log_rank_test <- survdiff(survival_object ~ thickness_cat, data = df_melanoma30)
log_rank_test
# Fit Kaplan-Meier curves for thickness categories
fit <- coxph(survival_object ~ thickness_cat, data = df_melanoma30)
# Fit the Cox proportional hazards model
cox_model <- coxph(Surv(time, dead) ~ age + thickness + epicell + ici + ulceration + sex + invas2, data = df_melanoma30)
summary(cox_model)
ggplot(df_melanoma30, aes(x = age, y = martingale_residuals)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", color = "blue") +
ggtitle("Martingale Residuals vs Age") +
xlab("Age") +
ylab("Martingale Residuals")
# Boxplots for continuous variables
continuous_vars <- c("time", "thickness", "age", "logthick")
for (var in continuous_vars) {
pdf(paste("Billeder_duration/Boxplot_of_",var,".pdf"),width = 400,height = 300)
ggplot(df_melanoma30, aes_string(x = var)) +
geom_boxplot() +
ggtitle(paste("Boxplot of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) +
ylab("Values") -> plot
print(plot)
dev.off()
}
# Histogram and density plot for continuous variables
for (var in continuous_vars) {
pdf(paste("Billeder_duration/Histogram_and_Density_of_",var,".pdf"))
ggplot(df_melanoma30, aes_string(x = var)) +
#  geom_histogram(bins = 30, fill = "lightblue", color = "black", alpha = 0.7) +
geom_density(aes(y = ..density.. * max(..count..)), color = "red") +
ggtitle(paste("Histogram and Density of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) -> plot
print(plot)
dev.off()
}
# Calculate skewness for continuous variables
sapply(df_melanoma30[continuous_vars], skewness, na.rm = TRUE)
# Load required libraries
library(ggplot2)
library(survival)
library(KMsurv)
<<<<<<< HEAD
library(survminer)
library(moments)
#stor tissemand
# Load the data
load("melanoma30.RData")
=======
>>>>>>> 217864b3594e2929f5391c0dd009bea67c33b355
df_melanoma30 <- melanoma30
# View the first few rows and structure of the dataset
head(df_melanoma30)
str(df_melanoma30)
summary(df_melanoma30)
# Boxplots for continuous variables
continuous_vars <- c("time", "thickness", "age", "logthick")
for (var in continuous_vars) {
<<<<<<< HEAD
pdf(paste("Billeder_duration/Boxplot_of_",var,".pdf"),width = 400,height = 300)
=======
pdf(paste0("Billeder_duration/Boxplot_of_",var,".pdf"),width = 400,height = 300)
>>>>>>> 217864b3594e2929f5391c0dd009bea67c33b355
ggplot(df_melanoma30, aes_string(x = var)) +
geom_boxplot() +
ggtitle(paste("Boxplot of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) +
ylab("Values") -> plot
print(plot)
dev.off()
}
<<<<<<< HEAD
# Histogram and density plot for continuous variables
for (var in continuous_vars) {
pdf(paste("Billeder_duration/Histogram_and_Density_of_",var,".pdf"))
ggplot(df_melanoma30, aes_string(x = var)) +
#  geom_histogram(bins = 30, fill = "lightblue", color = "black", alpha = 0.7) +
geom_density(aes(y = ..density.. * max(..count..)), color = "red") +
ggtitle(paste("Histogram and Density of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) -> plot
print(plot)
dev.off()
}
# Calculate skewness for continuous variables
sapply(df_melanoma30[continuous_vars], skewness, na.rm = TRUE)
# Table of frequencies for categorical variables
categorical_vars <- c("status", "dead", "ici", "epicell", "ulceration", "sex", "invas2")
lapply(df_melanoma30[categorical_vars], table)
# Bar plots for categorical variables
for (var in categorical_vars) {
pdf(paste("Billeder_duration/Bar_plot_of_",var,".pdf"))
ggplot(df_melanoma30, aes_string(x = var)) +
geom_bar(fill = "lightblue", color = "black") +
ggtitle(paste("Bar plot of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) -> plot
print(plot)
dev.off()
}
# Create thickness categories
df_melanoma30$thickness_cat <- as.factor(cut(df_melanoma30$thickness,
breaks = quantile(df_melanoma30$thickness, probs = c(0, 1/5, 2/5, 3/5, 4/5, 1), na.rm = TRUE),
labels = c("Cat 1", "Cat 2", "Cat 3", "Cat 4", "Cat 5")))
# Create a survival object
df_melanoma30$dead <- as.numeric(df_melanoma30$dead)
survival_object <- Surv(df_melanoma30$time, df_melanoma30$dead)
# Fit Kaplan-Meier curves for thickness categories
fit <- survfit(survival_object ~ thickness_cat, data = df_melanoma30)
# Plot Kaplan-Meier survival curves
pdf("Billeder_duration/Kaplan-Meier_Survival_Curves_by_Tumor_Thickness_Categories.pdf",width =600 ,height =350)
ggsurvplot(fit, data = df_melanoma30,
#pval = TRUE, # Adds p-value from log-rank test
#conf.int = FALSE, # Adds confidence intervals
#risk.table = TRUE, # Shows risk table
ggtheme = theme_minimal(),
palette = "Dark2",
title = "Kaplan-Meier Survival Curves by Tumor Thickness Categories")
dev.off()
# Perform the log-rank test
log_rank_test <- survdiff(survival_object ~ thickness_cat, data = df_melanoma30)
log_rank_test
# Fit the Cox proportional hazards model
cox_model <- coxph(Surv(time, dead) ~ age + thickness + epicell + ici + ulceration + sex + invas2, data = df_melanoma30)
summary(cox_model)
# Calculate and add martingale residuals to the dataset
martingale_residuals <- residuals(cox_model, type = "martingale")
df_melanoma30$martingale_residuals <- martingale_residuals
# Plot martingale residuals against 'age'
pdf("Billeder_duration/Martingale_Residuals_vs_Age.pdf")
ggplot(df_melanoma30, aes(x = age, y = martingale_residuals)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", color = "blue") +
ggtitle("Martingale Residuals vs Age") +
xlab("Age") +
ylab("Martingale Residuals")
dev.off()
pdf()
# Plot martingale residuals against 'thickness'
pdf("Billeder_duration/Martingale_Residuals_vs_Tumor_Thickness.pdf")
ggplot(df_melanoma30, aes(x = thickness, y = martingale_residuals)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", color = "blue") +
ggtitle("Martingale Residuals vs Tumor Thickness") +
xlab("Tumor Thickness") +
ylab("Martingale Residuals")
dev.off()
# Fit models with log-transformed age and thickness
cox_model <- coxph(Surv(time, dead) ~ age + thickness + epicell + ici + ulceration + sex + invas2, data = df_melanoma30)
summary(cox_model_log)
# Compare AIC of original model vs log-transformed model
AIC(cox_model, cox_model_log)
#opg.6
cox_model_log <- coxph(Surv(time, dead) ~ age + logthick + epicell + ici + ulceration + sex + invas2, data = df_melanoma30)
summary(cox_model_log)
#opg.7
# Define the new data point with the original (untransformed) age and thickness
new_data <- data.frame(
age = 57,
logthick = 750,
epicell = "yes",
ici = 2,
ulceration = "yes",
sex = "male",
invas2 = "Clark I-III"
)
# Estimate the survival function using survfit
surv_estimate <- survfit(cox_model_log, newdata = new_data)
# Calculate survival probability at 8 years (57 to 65)
summary(surv_estimate, times = 8)
#opg.6
cox_model_log <- coxph(Surv(time, dead) ~ age + logthick + factor(epicell) + factor(ici) + factor(ulceration) + factor(sex) + factor(invas2), data = df_melanoma30)
summary(cox_model_log)
#opg.7
# Define the new data point with the original (untransformed) age and thickness
new_data <- data.frame(
age = 57,
logthick = 750,
epicell = "yes",
ici = 2,
ulceration = "yes",
sex = "male",
invas2 = "Clark I-III"
)
# Estimate the survival function using survfit
surv_estimate <- survfit(cox_model_log, newdata = new_data)
# Calculate survival probability at 8 years (57 to 65)
summary(surv_estimate, times = 8)
# Calculate survival probability at 8 years (57 to 65)
summary(surv_estimate, times = 100)
## Examine Residuals
# Martingale Residuals
martingale_residuals <- residuals(cox_model, type = "martingale")
df_melanoma30$martingale_residuals <- martingale_residuals
#opg.7
# Define the new data point with the original (untransformed) age and thickness
new_data <- data.frame(
age = 57,
logthick = 750,
epicell = "yes",
ici = 2,
ulceration = "yes",
sex = "male",
invas2 = "Clark I-III"
)
# Estimate the survival function using survfit
surv_estimate <- survfit(cox_model_log, newdata = new_data)
# Calculate survival probability at 8 years (57 to 65)
summary(surv_estimate, times = 100)
#opg 8
# Estimate cumulative baseline hazard
baseline_hazard <- basehaz(cox_model_log, centered = FALSE)
# Plot cumulative baseline hazard
plot(baseline_hazard$time, baseline_hazard$hazard, type = "s",
xlab = "Time", ylab = "Cumulative Baseline Hazard",
main = "Cumulative Baseline Hazard Plot")
# Plot cumulative baseline hazard
plot(baseline_hazard$time, baseline_hazard$hazard, type = "s",
xlab = "Time", ylab = "Cumulative Baseline Hazard",
main = "Cumulative Baseline Hazard Plot")
# Calculate survival probability at 8 years (57 to 65)
summary(surv_estimate, times = 1)
#opg 8
# Estimate cumulative baseline hazard
baseline_hazard <- basehaz(cox_model_log, centered = FALSE)
# Plot cumulative baseline hazard
plot(baseline_hazard$time, baseline_hazard$hazard, type = "s",
xlab = "Time", ylab = "Cumulative Baseline Hazard",
main = "Cumulative Baseline Hazard Plot")
# Calculate skewness for continuous variables
sapply(df_melanoma30[continuous_vars], skewness, na.rm = TRUE)
# Table of frequencies for categorical variables
categorical_vars <- c("status", "dead", "ici", "epicell", "ulceration", "sex", "invas2")
=======
paste0("Billeder_duration/Boxplot_of_",var,".pdf")
# Boxplots for continuous variables
continuous_vars <- c("time", "thickness", "age", "logthick")
for (var in continuous_vars) {
pdf(paste0("Billeder_duration/Boxplot_of_",var,".pdf"),width = 400,height = 300)
ggplot(df_melanoma30, aes_string(x = var)) +
geom_boxplot() +
ggtitle(paste("Boxplot of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) +
ylab("Values") -> plot
print(plot)
dev.off()
}
# Boxplots for continuous variables
continuous_vars <- c("time", "thickness", "age", "logthick")
for (var in continuous_vars) {
pdf(paste0("Billeder_duration/Boxplot_of_",var,".pdf"),width = 400,height = 300)
ggplot(df_melanoma30, aes_string(x = var)) +
geom_boxplot() +
ggtitle(paste("Boxplot of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) +
ylab("Values") -> plot
print(plot)
dev.off()
}
install.packages(biOps)
install.packages("biOps")
install.packages("rtools")
install.packages("Rtools")
install.packages("biOps")
install.packages("raster")
library(raster)
library(raster)
install.packages("raster")
library(raster)
library(sp)
# Boxplots for continuous variables
continuous_vars <- c("time", "thickness", "age", "logthick")
for (var in continuous_vars) {
pdf(paste0("Billeder_duration/Boxplot_of_",var,".pdf"),width = 400,height = 300)
ggplot(df_melanoma30, aes_string(x = var)) +
geom_boxplot() +
ggtitle(paste("Boxplot of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) +
ylab("Values") -> plot
print(plot)
dev.off()
}
# Boxplots for continuous variables
continuous_vars <- c("time", "thickness", "age", "logthick")
for (var in continuous_vars) {
pdf(paste0("Billeder_duration/Boxplot_of_",var,".pdf"))
ggplot(df_melanoma30, aes_string(x = var)) +
geom_boxplot() +
ggtitle(paste("Boxplot of", var)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(var) +
ylab("Values") -> plot
print(plot)
dev.off()
}
source("~/GitHub/Varighedsanalyse-freml-ggelse/Basses_kode/Mini_project_varighedsanalyse.R", echo=TRUE)
source("~/GitHub/Varighedsanalyse-freml-ggelse/Basses_kode/Mini_project_varighedsanalyse.R", echo=TRUE)
# Load required libraries
library(ggplot2)
library(survival)
library(KMsurv)
install.packages("KMsurv")
# Load required libraries
library(ggplot2)
library(survival)
library(KMsurv)
library(survminer)
library(moments)
install.packages("moments")
install.packages("moments")
>>>>>>> 217864b3594e2929f5391c0dd009bea67c33b355
