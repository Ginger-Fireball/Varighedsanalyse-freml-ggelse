# Load required libraries
library(ggplot2)
library(survival)
library(KMsurv)
library(survminer)
library(moments)
library(dplyr)
library(car) # For VIF calculation
library(broom) # For tidy residuals

# Load the data
load("melanoma30.RData")
df_melanoma30 <- melanoma30

df_melanoma30$dead <- (as.numeric(df_melanoma30$dead)) - 1
df_melanoma30$epicell <- (as.numeric(df_melanoma30$epicell)) - 1
df_melanoma30$ulceration <- (as.numeric(df_melanoma30$ulceration)) - 1
df_melanoma30$sex <- (as.numeric(df_melanoma30$sex)) -1
df_melanoma30$invas2 <- (as.numeric(df_melanoma30$invas2)) - 1

# View the first few rows and structure of the dataset
head(df_melanoma30)
str(df_melanoma30)
summary(df_melanoma30)

# Boxplots for continuous variables
continuous_vars <- c("time", "thickness", "age", "logthick")
for (var in continuous_vars) {
  pdf(paste0("Billeder_duration/Boxplot_of_",var,".pdf"))
  ggplot(df_melanoma30, aes_string(x = var)) +
    geom_boxplot() +
    ggtitle(paste("Boxplot of", var)) +
    theme_minimal() +
    theme(plot.title = element_text(hjust = 0.5)) +
    xlab(var) +
    ylab("Values") -> plot
  print(plot)
dev.off()
}

# Histogram and density plot for continuous variables
for (var in continuous_vars) {
  pdf(paste0("Billeder_duration/Histogram_and_Density_of_",var,".pdf"))
  ggplot(df_melanoma30, aes_string(x = var)) +
  #  geom_histogram(bins = 30, fill = "lightblue", color = "black", alpha = 0.7) +
    geom_density(aes(y = ..density.. * max(..count..)), color = "red") +
    ggtitle(paste("Histogram and Density of", var)) +
    theme_minimal() +
    theme(plot.title = element_text(hjust = 0.5)) +
    xlab(var) -> plot
  print(plot)
  dev.off()
}

# Calculate skewness for continuous variables
sapply(df_melanoma30[continuous_vars], skewness, na.rm = TRUE)

# Table of frequencies for categorical variables
categorical_vars <- c("status", "dead", "ici", "epicell", "ulceration", "sex", "invas2")
lapply(df_melanoma30[categorical_vars], table)

# Bar plots for categorical variables
for (var in categorical_vars) {
  pdf(paste0("Billeder_duration/Bar_plot_of_",var,".pdf"))
  ggplot(df_melanoma30, aes_string(x = var)) +
    geom_bar(fill = "lightblue", color = "black") +
    ggtitle(paste("Bar plot of", var)) +
    theme_minimal() +
    theme(plot.title = element_text(hjust = 0.5)) +
    xlab(var) -> plot
  print(plot)
  dev.off()
}





# Opgave 3: Kaplan-Meier Survival Analysis

# Create thickness categories
df_melanoma30$thickness_cat <- as.factor(cut(df_melanoma30$thickness,
                                             breaks = quantile(df_melanoma30$thickness, probs = c(0, 1/5, 2/5, 3/5, 4/5, 1), na.rm = TRUE),
                                             labels = c("Cat 1", "Cat 2", "Cat 3", "Cat 4", "Cat 5")))

# Create a survival object
df_melanoma30$dead <- as.numeric(df_melanoma30$dead)
survival_object <- Surv(df_melanoma30$time, df_melanoma30$dead)

# Fit Kaplan-Meier curves for thickness categories
fit <- survfit(survival_object ~ thickness_cat, data = df_melanoma30)

# Plot Kaplan-Meier survival curves
pdf("Billeder_duration/Kaplan-Meier_Survival_Curves_by_Tumor_Thickness_Categories.pdf")
ggsurvplot(fit, data = df_melanoma30, 
           #pval = TRUE, # Adds p-value from log-rank test
           #conf.int = FALSE, # Adds confidence intervals
           #risk.table = TRUE, # Shows risk table
           ggtheme = theme_minimal(), 
           palette = "Dark2",
           title = "Kaplan-Meier Survival Curves by Tumor Thickness Categories")
dev.off()
# Perform the log-rank test
log_rank_test <- survdiff(survival_object ~ thickness_cat, data = df_melanoma30)
log_rank_test





# Opgave 4: Cox Proportional Hazards Model

# Fit the Cox proportional hazards model
cox_model <- coxph(Surv(time, dead) ~ age + thickness + epicell + ici + ulceration + sex + invas2, data = df_melanoma30)
summary(cox_model)

# Calculate and add martingale residuals to the dataset
martingale_residuals <- residuals(cox_model, type = "martingale")
df_melanoma30$martingale_residuals <- martingale_residuals

# Plot martingale residuals against 'age'
pdf("Billeder_duration/Martingale_Residuals_vs_Age.pdf")
ggplot(df_melanoma30, aes(x = age, y = martingale_residuals)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "loess", color = "blue") +
  ggtitle("Martingale Residuals vs Age") +
  xlab("Age") +
  ylab("Martingale Residuals")
dev.off()
# Plot martingale residuals against 'thickness'
pdf("Billeder_duration/Martingale_Residuals_vs_Tumor_Thickness.pdf")
ggplot(df_melanoma30, aes(x = thickness, y = martingale_residuals)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "loess", color = "blue") +
  ggtitle("Martingale Residuals vs Tumor Thickness") +
  xlab("Tumor Thickness") +
  ylab("Martingale Residuals")
dev.off()


# Opgave 5

# Assume you have already fitted your Cox model
# Example: cox_model <- coxph(Surv(time, dead) ~ age + thickness + epicell + ici + ulceration + sex + invas2, data = df_melanoma30)

## Check Proportional Hazards Assumption
ph_test <- cox.zph(cox_model)
print(ph_test)
jpeg("Billeder_duration/Schoenfeld_Residuals.jpeg")
# Use ggcoxzph to create a combined plot
ggcoxzph(ph_test)
# Close the device
dev.off()



## Examine Residuals
# Martingale Residuals
martingale_residuals <- residuals(cox_model, type = "martingale")
df_melanoma30$martingale_residuals <- martingale_residuals

# Plot martingale residuals against fitted values
pdf("Billeder_duration/martingale_residuals_against_fitted_values.pdf",width = 25,height = 12)
ggplot(df_melanoma30, aes(x = fitted(cox_model), y = martingale_residuals)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "loess", color = "blue") +
  ggtitle("Martingale Residuals vs Fitted Values") +
  xlab("Fitted Values") +
  ylab("Martingale Residuals") +
  theme_minimal()
dev.off()
## Deviance Residuals
deviance_residuals <- residuals(cox_model, type = "deviance")
df_melanoma30$deviance_residuals <- deviance_residuals

# Plot deviance residuals
pdf("Billeder_duration/deviance_residuals.pdf")
ggplot(df_melanoma30, aes(x = fitted(cox_model), y = deviance_residuals)) +
  geom_point(alpha = 0.5) +
  geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
  ggtitle("Deviance Residuals vs Fitted Values") +
  xlab("Fitted Values") +
  ylab("Deviance Residuals") +
  theme_minimal()
dev.off()

# Add Deviance Residuals to the dataframe
df_melanoma30$deviance_residuals <- deviance_residuals

# Plot Histogram of Deviance Residuals
pdf("Billeder_duration/deviance_residuals_Histogram.pdf")
ggplot(df_melanoma30, aes(x = deviance_residuals)) +
  geom_histogram(binwidth = 0.1, fill = "lightgreen", color = "black") +
  ggtitle("Histogram Deviance Residuals") +
  xlab("Deviance Residuals") +
  ylab("Frequency") +
  theme_minimal()+
  xlim(0,2)
dev.off
## Check for Influential Observations using DFBetas
# Calculate DFBetas for each observation in the Cox model
dfbetas_values <- residuals(cox_model, type = "dfbeta")

# Print the first few rows of the DFBetas to examine
head(dfbetas_values)

# Convert DFBetas matrix to a data frame for easier plotting
dfbetas_df <- as.data.frame(dfbetas_values)
names(dfbetas_df) <- names(coef(cox_model))  # Label columns with predictor names
dfbetas_df$Observation <- 1:nrow(dfbetas_df)  # Add observation index

# Plot DFBetas for each predictor
for (predictor in names(coef(cox_model))) { 
  pdf(paste0("Billeder_duration/DFBetas_for_",predictor,".pdf"))
  ggplot(dfbetas_df, aes_string(x = "Observation", y = predictor)) +
    geom_point(alpha = 0.5) +
    geom_hline(yintercept = c(-2/(sqrt(nrow(df_melanoma30))), 2/(sqrt(nrow(df_melanoma30)))), color = "red", linetype = "dashed") +  # Threshold lines
    ggtitle(paste("DFBetas for Predictor:", predictor)) +
    xlab("Observation") +
    ylab(paste("DFBetas for", predictor)) +
    theme_minimal() -> plot
  print(plot)
  dev.off()
}


## Cox snell
melanomasurv=Surv(df_melanoma30$time,df_melanoma30$dead)
#model with all covariates. Cox-Snell residuals
fitall <- coxph(melanomasurv ~ thickness + epicell 
                + ici + ulceration + sex 
                + invas2 + age, data=df_melanoma30)
summary(fitall)
resall <- residuals(fitall, type = "martingale")
#Cox-Snell residualer beregnes lettest udfra martingal-residualerne.
mart <- resall
coxsnell <- df_melanoma30$dead - mart
coxsnellfit <- survfit(Surv(coxsnell,df_melanoma30$dead)~1)



pdf("Billeder_duration/log_Cox_Snell_residualer.pdf")
plot(log(coxsnellfit$time),log(-log(coxsnellfit$surv)))
abline(c(0,1))
dev.off()
pdf("Billeder_duration/Cox_Snell_residualer.pdf")
plot(coxsnellfit$time,-log(coxsnellfit$surv))
abline(c(0,1))
dev.off()
#looks pretty good.






